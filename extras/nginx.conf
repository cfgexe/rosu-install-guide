server {
    listen 80;
    server_name a.your.domain;
    return 301 https://$server_name$request_uri;
}
server {
	listen 443 ssl;
	ssl_certificate     /path/to/certs/cert.pem;
	ssl_certificate_key /path/to/certs/cert.key;
	server_name a.your.domain;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Robots-Tag none;
    ssl_protocols TLSv1.2;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://127.0.0.1:5000;    # default port is 5000
    }
}
server {
    listen 80;
    listen [::]:80;
    server_name c.your.domain;
    return 301 https://$server_name$request_uri;
}
upstream peppy {
	server 127.0.0.1:5001 fail_timeout=0;
}
server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	ssl_certificate     /path/to/certs/cert.pem;
	ssl_certificate_key /path/to/certs/cert.key;
	server_name c.your.domain;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Robots-Tag none;
    ssl_protocols TLSv1.2;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://peppy;    # default port is 5001
    }
}
# This just forwards non-ssl traffic to the SSL endpoints.
server {
    listen 80;
    server_name osu.your.domain;
    return 301 https://osu.your.domain$request_uri;
}

# Main config for the score server.
upstream ussr {
	server 127.0.0.1:2137 fail_timeout=0;
}
server {
    server_name osu.your.domain;
    listen 443 ssl;
	ssl_certificate     /path/to/certs/cert.pem;
	ssl_certificate_key /path/to/certs/cert.key;

    location /api {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded_for $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
        proxy_pass http://127.0.0.1:40001;
    }

    # The osu! endpoints.
    location /web/ {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://ussr;
    }

    # Another osu! endpoint except for some reason does not fall under /web/.
    # Perhaps could make it into a straight up Nginx redirect later.
    location /difficulty-rating {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://ussr;
    }

    # Screenshots are all handled by Nginx for performance.
    location ~ ^/ss/(.*) {
        root /home/rosu/screenshots;
        add_header content-type "image/png";
        try_files /$1 =404;
    }

    # Beatmap Downloads handled by the beatmap mirror.
    location ~ ^/d/(.*) {
        return 301 https://catboy.best/d/$1;
    }

    # Optional: Redirect rest of the connections to our main domain. Don't do if
    # you use osu.domain as your main domain.
    location / {
        return 301 https://your.domain$request_uri;
    }
}
server {
    listen 80;
    server_name your.domain;
    return 301 https://your.domain$request_uri;
}
server {
    server_name your.domain;
    listen 443 ssl;
	ssl_certificate     /path/to/certs/cert.pem;
	ssl_certificate_key /path/to/certs/cert.key;
    location /api {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded_for $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
        proxy_pass http://127.0.0.1:40001;
    }
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://127.0.0.1:6969;
    }
}
